package ec.edu.espe.deinglogin.view;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import javax.swing.DefaultComboBoxModel;
import ec.edu.espe.deinglogin.model.Sale;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import ec.edu.espe.deinglogin.utils.Manager;
import java.util.*;
import ec.edu.espe.deinglogin.utils.ValidationUtil;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import ec.edu.espe.deinglogin.utils.SQLiteDataConnect;
import ec.edu.espe.deinglogin.model.Product;
import ec.edu.espe.deinglogin.model.RawMaterial;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Statement;
import java.sql.DriverManager;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author Diego Casignia, Techware, DCCO-ESPE
 */
public class MainPage extends javax.swing.JFrame {

    /**
     * Creates new form MainPage
     */
    DefaultTableModel model = new DefaultTableModel();
    Product product;
    Sale sale;
    ArrayList<Sale> saleList = new ArrayList<>();
    float iva = 0.12F;
    private String url = "jdbc:sqlite:database/database.db";

    public MainPage() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        getContentPane().setBackground(Color.white);
        initAllPanel();
        addTable();
        loadRawMaterialData();
        loadInventoryGUI();
        txtId.setEditable(false);
    }

    public void loadRawMaterialData() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        try (Connection connection = DriverManager.getConnection(url); Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery("SELECT Id, Name FROM rawMaterial")) {
            // Iterar sobre los resultados y agregar los nombres al modelo del JComboBox
            while (resultSet.next()) {
                String id = resultSet.getString("Id");
                String nombre = resultSet.getString("Name");
                model.addElement(nombre);
            }

            // Establecer el modelo del JComboBox
            comboBoxRawMaterial.setModel(model);

            // Cerrar la conexión y liberar recursos
            resultSet.close();
            statement.close();
            connection.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void loadInventoryGUI() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id");
        model.addColumn("Producto");
        model.addColumn("Cantidad");
        try (Connection connection = DriverManager.getConnection(url); Statement statement = connection.createStatement(); ResultSet resultSet = statement.executeQuery("SELECT Id, Name, Amount FROM rawMaterial")) {
            while (resultSet.next()) {
                String id = resultSet.getString("Id");
                String nombre = resultSet.getString("Name");
                int cantidad = resultSet.getInt("Amount");
                model.addRow(new Object[]{id, nombre, cantidad});
            }
            tbInventory.setModel(model);
            resultSet.close();
            statement.close();
            connection.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        bntNewProduct = new javax.swing.JButton();
        btnAddProduct = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblInventory = new javax.swing.JScrollPane();
        tbInventory = new javax.swing.JTable();
        comboBoxRawMaterial = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnFinishSale = new javax.swing.JButton();
        btnNewSale = new javax.swing.JButton();
        txtFinalPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabList = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuInventory = new javax.swing.JMenu();
        itmAddRawMaterial = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mniHelp = new javax.swing.JMenuItem();
        mnExit = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Panes de la Rumiñahui");
        setName("mainPage"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 203, 104));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(650, 625));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("CÓDIGO DEL PRODUCTO");

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("CANTIDAD");

        txtAmount.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAmountKeyPressed(evt);
            }
        });

        bntNewProduct.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        bntNewProduct.setText("BORRAR");
        bntNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntNewProductActionPerformed(evt);
            }
        });

        btnAddProduct.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAddProduct.setText("AGREGAR EL PRODUCTO");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });
        btnAddProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddProductKeyPressed(evt);
            }
        });

        tbInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Cantidad"
            }
        ));
        tbInventory.setEnabled(false);
        tblInventory.setViewportView(tbInventory);

        jScrollPane3.setViewportView(tblInventory);

        comboBoxRawMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxRawMaterialActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("PRODUCTO");

        jLabel3.setFont(new java.awt.Font("SWItalc", 0, 24)); // NOI18N
        jLabel3.setText("FACTURACIÓN");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/deinglogin/view/panaderia.png"))); // NOI18N
        jLabel7.setText("                  ");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/deinglogin/view/panaderia.png"))); // NOI18N
        jLabel9.setText("                  ");

        jLabel10.setText("----------");

        jLabel11.setText("----------");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddProduct)
                        .addGap(5, 5, 5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(106, 106, 106))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bntNewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(comboBoxRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(208, 208, 208))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(264, 264, 264)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(61, 61, 61)
                .addComponent(jLabel8)
                .addGap(28, 28, 28)
                .addComponent(comboBoxRawMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntNewProduct)
                    .addComponent(btnAddProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jPanel2.setBackground(new java.awt.Color(255, 208, 89));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(665, 625));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("CARRITO DE COMPRAS");

        btnFinishSale.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnFinishSale.setText("FINALIZAR VENTA");
        btnFinishSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishSaleActionPerformed(evt);
            }
        });

        btnNewSale.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnNewSale.setText("CANCELAR VENTA");
        btnNewSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewSaleActionPerformed(evt);
            }
        });

        txtFinalPrice.setEditable(false);
        txtFinalPrice.setBackground(new java.awt.Color(255, 255, 255));
        txtFinalPrice.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        txtFinalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFinalPriceActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("PRECIO FINAL");

        tabList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Cantidad", "Precio Unitario", "Precio Total"
            }
        ));
        jScrollPane1.setViewportView(tabList);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/deinglogin/view/carrito-de-compras (1).png"))); // NOI18N

        jLabel12.setText("----------");

        jLabel13.setText("----------");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/deinglogin/view/carrito-de-compras (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(txtFinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel6)))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNewSale)
                .addGap(84, 84, 84)
                .addComponent(btnFinishSale, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13))))
                    .addComponent(jLabel14))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(21, 21, 21)
                .addComponent(txtFinalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinishSale)
                    .addComponent(btnNewSale))
                .addGap(119, 119, 119))
        );

        mnuInventory.setText("Administración");
        mnuInventory.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        itmAddRawMaterial.setText("Inventario");
        itmAddRawMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAddRawMaterialActionPerformed(evt);
            }
        });
        mnuInventory.add(itmAddRawMaterial);

        jMenuItem5.setText("Registro de productos");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        mnuInventory.add(jMenuItem5);

        jMenuBar1.add(mnuInventory);

        jMenu1.setText("Venta");

        jMenuItem2.setText("Ventas");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Reporte");

        jMenuItem3.setText("Generar Informe");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        mnuHelp.setText("Ayuda");
        mnuHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        mniHelp.setText("Contacto");
        mniHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHelpActionPerformed(evt);
            }
        });
        mnuHelp.add(mniHelp);

        jMenuBar1.add(mnuHelp);

        mnExit.setText("Finalizar");

        jMenuItem1.setText("Cerrar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnExit.add(jMenuItem1);

        jMenuBar1.add(mnExit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntNewProductActionPerformed
        initPanelProduct();
    }//GEN-LAST:event_bntNewProductActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed

    }//GEN-LAST:event_txtIdActionPerformed

    private void txtIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyReleased

    }//GEN-LAST:event_txtIdKeyReleased

    private void txtIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyPressed

        ValidationUtil validationUtil = new ValidationUtil();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (validationUtil.validateInt(txtId.getText())) {

                String id = txtId.getText();
                validateProduct(id);

            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un un numero positivo para el Id");
                txtId.setText("");
                txtId.requestFocus();
            }

        }
    }//GEN-LAST:event_txtIdKeyPressed

    private void validateProduct(String id) {
        try {
            // Conectar a la base de datos SQLite
            Connection connection = SQLiteDataConnect.getConnection();

            // Crear la consulta SQL para obtener los detalles del producto con el ID dado
            String query = "SELECT * FROM rawMaterial WHERE Id = ?";

            // Preparar la consulta
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, id);

            // Ejecutar la consulta
            ResultSet resultSet = preparedStatement.executeQuery();

            // Verificar si se encontró el producto y obtener sus detalles
            if (resultSet.next()) {
                String nameProduct = resultSet.getString("Name");
                float budgetProduct = resultSet.getFloat("Price");
                int stock = resultSet.getInt("Amount");
                product = new Product(id, nameProduct, budgetProduct, stock);
            } else {
                JOptionPane.showMessageDialog(null, "Producto no encontrado ");
            }

            // Cerrar la conexión y liberar recursos
            resultSet.close();
            preparedStatement.close();
            connection.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        addProductAction();
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void addProductAction() throws NumberFormatException, HeadlessException {
        String id = txtId.getText();
        if (!"".equals(id)) {
            String sql = "SELECT * FROM rawMaterial WHERE Id = ?";
            try (Connection connection = DriverManager.getConnection(url); PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, id);
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    if (resultSet.next()) {
                        String name = resultSet.getString("Name");
                        float budgetProduct = resultSet.getFloat("Price");
                        int stock = resultSet.getInt("Amount");
                        int amount = Integer.parseInt(txtAmount.getText());
                        if (amount <= stock) {
                            sale = new Sale(id, name, amount, budgetProduct, budgetProduct * amount);
                            saleList.add(sale);
                            addProductToList();
                            initPanelProduct();
                        } else {
                            JOptionPane.showMessageDialog(null, "No existe el suficiente Stock");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Producto no encontrado ");
                    }
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un producto");
        }
    }

    private void btnNewSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewSaleActionPerformed
        saleList.clear();
        DefaultTableModel model = (DefaultTableModel) tabList.getModel();
        model.setRowCount(0);
        initAllPanel();
    }//GEN-LAST:event_btnNewSaleActionPerformed

    private void btnFinishSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishSaleActionPerformed
        saveSale();
        finishSale();
        initAllPanel();
        loadInventoryGUI();
        DefaultTableModel model = (DefaultTableModel) tabList.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnFinishSaleActionPerformed

    private void finishSale() throws HeadlessException {
        Manager mongoConnect = new Manager();
        mongoConnect.inventoryConnect(saleList, model, tabList);

    }

    private void saveSale() {
        float finalPrice = Float.parseFloat(txtFinalPrice.getText());
        Manager mongoConnect = new Manager();
        mongoConnect.incomeConnect(saleList, finalPrice);
    }

    private void btnAddProductKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddProductKeyPressed
        addProductAction();
    }//GEN-LAST:event_btnAddProductKeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        LoginGUI loginGUI = new LoginGUI();
        loginGUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private String showUserTypeDialog() {
        String[] options = {"Administrador", "Control de existencias"};
        int choice = JOptionPane.showOptionDialog(
                this,
                "Seleccione el tipo de usuario:",
                "Tipo de Usuario",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]
        );

        if (choice == JOptionPane.CLOSED_OPTION) {
            return null;
        } else {
            String selectedOption = options[choice];
            if (selectedOption.equals("Control de existencias")) {
                ExpensesGUIForUser expensesGUIForUser = new ExpensesGUIForUser();
                expensesGUIForUser.setVisible(true);
                this.setVisible(false);
            }
            if (selectedOption.equals("Administrador")) {
                MainPage mainPage = new MainPage();
                mainPage.setVisible(true);
                this.setVisible(false);
            }
            return selectedOption;
        }
    }

    private void itmAddRawMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAddRawMaterialActionPerformed
        ExpensesGUIForUser expensesGUIForUser = new ExpensesGUIForUser();
        expensesGUIForUser.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_itmAddRawMaterialActionPerformed

    private void txtFinalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFinalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFinalPriceActionPerformed

    private void mniHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHelpActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Por faovr contactese con el técnico de mantenimiento al \n 0988334307 o al 0961391977");
    }//GEN-LAST:event_mniHelpActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        RawMaterialGUI rawMaterialGUI = new RawMaterialGUI();
        rawMaterialGUI.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void comboBoxRawMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxRawMaterialActionPerformed
        String name = (String) comboBoxRawMaterial.getSelectedItem();
        String sql = "SELECT * FROM rawMaterial WHERE Name = ?";
        try (Connection connection = DriverManager.getConnection(url); PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
            preparedStatement.setString(1, name);
            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    String id = resultSet.getString("Id");
                    txtId.setText(id);
                } else {
                    JOptionPane.showMessageDialog(null, "Producto no encontrado ");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_comboBoxRawMaterialActionPerformed

    private void txtAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyPressed
        ValidationUtil validationUtil = new ValidationUtil();

        int amount = 0;
        float totalPrice = 0;
        float priceIVA = 0;

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (validationUtil.validateBarcode(txtId.getText())) {
                btnAddProduct.requestFocus();
                String id = txtId.getText();
                validateProduct(id);
                txtAmount.requestFocus();
                amount = Integer.parseInt(txtAmount.getText());
                totalPrice = product.getBudgetProduct() * amount;
                priceIVA = totalPrice * iva + totalPrice;
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un un numero positivo para el Id");
                txtId.setText("");
                txtId.requestFocus();
            }
            if (validationUtil.validateInt(txtAmount.getText())) {

                amount = Integer.parseInt(txtAmount.getText());
                //txtFullValue.setText(String.valueOf(product.getBudgetProduct() * amount));
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese un un numero positivo para la Cantidad");
                txtAmount.setText("");
                txtAmount.requestFocus();
            }
            btnAddProduct.requestFocus();
        }
    }//GEN-LAST:event_txtAmountKeyPressed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Cantidad");
        model.addColumn("Precio");
        model.addColumn("Precio Final");
        model.addColumn("Fecha de Compra");

        try {
            Connection connection = DriverManager.getConnection("jdbc:sqlite:database/database.db");
            PreparedStatement statement = connection.prepareStatement("SELECT * FROM Income");
            ResultSet resultSet = statement.executeQuery();

            // Iterar sobre las ventas
            while (resultSet.next()) {
                String id = resultSet.getString("Id");
                String nombre = resultSet.getString("Name");
                int cantidad = resultSet.getInt("Ammount");
                float precio = resultSet.getFloat("Price");
                float precioFinal = resultSet.getFloat("FinalPrice");
                String fechaCompra = resultSet.getString("Date");

                // Agregar la venta a la tabla
                model.addRow(new Object[]{id, nombre, cantidad, precio, precioFinal, fechaCompra});
            }

            // Crear la tabla con el modelo de datos
            JTable table = new JTable(model);

            // Presentar la tabla en un JOptionPane
            JOptionPane.showMessageDialog(null, new JScrollPane(table), "Ventas Realizadas", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        Document document = new Document();
        try {
            PdfWriter.getInstance(document, new FileOutputStream("reporte.pdf"));
            document.open();
            Paragraph encabezado = new Paragraph("PANES DE LA RUMIÑAHUI\nReporte de Inventario y Ventas");
            encabezado.setAlignment(Paragraph.ALIGN_CENTER);
            document.add(encabezado);
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            document.add(new Paragraph("\nFecha: " + dateFormat.format(new Date()) + "\n\nProductos:\n\n"));
            
            PdfPTable table = new PdfPTable(4);
            table.addCell("Id");
            table.addCell("Nombre");
            table.addCell("Cantidad");
            table.addCell("Precio");
            try {
                SQLiteDataConnect sqliteDataConnect = new SQLiteDataConnect();
                Connection connection = sqliteDataConnect.getConnection();
                Statement statement = connection.createStatement();
                ResultSet resultSet = statement.executeQuery("SELECT * FROM rawMaterial");
                while (resultSet.next()) {
                    String id = resultSet.getString("Id");
                    String nombre = resultSet.getString("Name");
                    int cantidad = resultSet.getInt("Amount");
                    float precio = resultSet.getFloat("Price");
                    table.addCell(id);
                    table.addCell(nombre);
                    table.addCell(String.valueOf(cantidad));
                    table.addCell(String.valueOf(precio));
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
            document.add(table);

            document.add(new Paragraph("\nVentas:\n\n"));
            PdfPTable table1 = new PdfPTable(6);
            table1.addCell("Id");
            table1.addCell("Nombre");
            table1.addCell("Cantidad");
            table1.addCell("Precio");
            table1.addCell("Precio Final");
            table1.addCell("Fecha");
            try {
                SQLiteDataConnect sqliteDataConnect = new SQLiteDataConnect();
                Connection connection = sqliteDataConnect.getConnection();
                Statement statement = connection.createStatement();
                ResultSet resultSet = statement.executeQuery("SELECT * FROM Income");
                while (resultSet.next()) {
                    String id = resultSet.getString("Id");
                    String nombre = resultSet.getString("Name");
                    int cantidad = resultSet.getInt("Ammount");
                    float precio = resultSet.getFloat("Price");
                    float precioFinal = resultSet.getFloat("FinalPrice");
                    String fechaCompra = resultSet.getString("Date");
                    table1.addCell(id);
                    table1.addCell(nombre);
                    table1.addCell(String.valueOf(cantidad));
                    table1.addCell(String.valueOf(precio));
                    table1.addCell(String.valueOf(precioFinal));
                    table1.addCell(fechaCompra);
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
            document.add(table1);

            document.close();
            File pdfFile = new File("reporte.pdf");
            if (pdfFile.exists()) {
                if (Desktop.isDesktopSupported()) {
                    Desktop.getDesktop().open(pdfFile);
                } else {
                    System.out.println("No es posible abrir el archivo PDF automáticamente en este sistema.");
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        } catch (DocumentException ex) {
            Logger.getLogger(ExpensesGUIForUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void addProductToList() {
        float finalPrice = Float.parseFloat(txtFinalPrice.getText());
        model.addRow(new Object[]{sale.getId(), sale.getNameProduct(), sale.getAmount(), sale.getUnitPrice(), sale.getTotalPrice()});
        tabList.setModel(model);
        finalPrice = finalPrice + sale.getTotalPrice();
        txtFinalPrice.setText(String.valueOf(finalPrice));
    }

    private void initAllPanel() {
        initPanelProduct();
        txtFinalPrice.setText("0.0");
    }

    private void initPanelProduct() {
        txtId.setText("");
        txtAmount.setText("");
        txtAmount.requestFocus();
    }

    private void addTable() {
        model.addColumn("Codigo");
        model.addColumn("Nombre");
        model.addColumn("Cantidad");
        model.addColumn("Precio Unitario");
        model.addColumn("Precio Total");
        loadRawMaterialData();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntNewProduct;
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnFinishSale;
    private javax.swing.JButton btnNewSale;
    private javax.swing.JComboBox<String> comboBoxRawMaterial;
    private javax.swing.JMenuItem itmAddRawMaterial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenu mnExit;
    private javax.swing.JMenuItem mniHelp;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenu mnuInventory;
    private javax.swing.JTable tabList;
    private javax.swing.JTable tbInventory;
    private javax.swing.JScrollPane tblInventory;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtFinalPrice;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
